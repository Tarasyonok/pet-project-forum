name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: '3.13'
  POETRY_VERSION: '2.2.1'
  DJANGO_SETTINGS_MODULE: 'django_forum.settings'
  DB_NAME: test_db
  DB_USER: postgres
  DB_PASSWORD: postgres
  DB_HOST: localhost
  DB_PORT: 5432

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          .venv/
          ~/.cache/pip/
          ~/.cache/pypoetry/
        key: ${{ runner.os }}-python-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-python-${{ env.PYTHON_VERSION }}-

    - name: Install Poetry
      run: |
        pip install poetry==${{ env.POETRY_VERSION }}

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.in-project true

    - name: Install dependencies
      run: |
        poetry install --no-interaction --no-root

    - name: Check code formatting with Ruff
      run: |
        poetry run ruff format --check .

    - name: Lint with Ruff
      run: |
        poetry run ruff check .

    - name: Wait for PostgreSQL to be ready
      run: |
        until pg_isready -h localhost -p 5432; do
          echo "Waiting for PostgreSQL..."
          sleep 2
        done

    - name: Run Tests
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: test_db
        DB_USER: postgres
        DB_PASSWORD: postgres
      run: |
        cd django_forum
        poetry run python manage.py migrate
        poetry run python manage.py test